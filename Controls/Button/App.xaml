<Application x:Class="Button.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Button"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Control colors.-->
        <Color x:Key="WindowBackground">#FF096292</Color>
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackground}"/>
        <Color x:Key="MainGridBackground">#FF02132F</Color>
        <SolidColorBrush x:Key="MainGridBackgroundBrush" Color="{StaticResource MainGridBackground}"/>
        <Color x:Key="StackpanelBackground">#FF032034</Color>
        <SolidColorBrush x:Key="StackpanelBackgroundBrush" Color="{StaticResource StackpanelBackground}"/>
        <Color x:Key="ToolBarTrayBackground">LightBlue</Color>
        <SolidColorBrush x:Key="ToolBarTrayBackgroundBrush" Color="{StaticResource ToolBarTrayBackground}"/>
        <Color x:Key="SliderBackground">#FF8BCADE</Color>
        <SolidColorBrush x:Key="SliderBackgroundBrush"  Color="{StaticResource SliderBackground}"/>
        <Color x:Key="ListboxBackground">#FFC4F7F7</Color>
        <SolidColorBrush x:Key="ListboxBackgroundBrush" Color="{StaticResource ListboxBackground}"/>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="ContextmenuBackground">LightBlue</Color>
        <SolidColorBrush x:Key="ContextmenuBackgroundBrush" Color="{StaticResource ContextmenuBackground}"/>
        <Color x:Key="ContextmenuForeground">Blue</Color>
        <SolidColorBrush x:Key="ContextmenuForegroundBrush" Color="{StaticResource ContextmenuForeground}"/>
        <Color x:Key="AlternatingRowBackground">#FFB9DFF7</Color>
        <SolidColorBrush x:Key="AlternatingRowBackgroundBrush" Color="{StaticResource AlternatingRowBackground}"/>
        <Color x:Key="RowBackground">#FFD2EAF7</Color>
        <SolidColorBrush x:Key="RowBackgroundBrush" Color="{StaticResource RowBackground}"/>
        <!-- Hintergrund für Header von MainWindow -->
        <LinearGradientBrush x:Key="headerBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="Blue"/>
            <GradientStop Offset="0.7" Color="Blue"/>
            <GradientStop Offset="1" Color="#FF0991C3"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="menuBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FF0991C3"/>
            <GradientStop Offset="0.5" Color="Blue"/>
            <GradientStop Offset="1" Color="#FF0991C3"/>
        </LinearGradientBrush>
        <Style x:Key="exitButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="ToolTip" Value="Close"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="maxButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="ToolTip" Value="Close"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Style für das Menü und die MenuItems -->
        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource menuBackground}"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <!-- Style für die ListboxItems -->
        <Style x:Key="listboxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="_Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_Border" Property="Background" Value="#FF8CEFFF"/>
                                <Setter Property="Foreground" Value="DarkBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Hintergrund für Header von MainWindow -->
        <LinearGradientBrush x:Key="datagridHeaderBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FF0991C3"/>
            <GradientStop Offset="0.5" Color="Blue"/>
            <GradientStop Offset="1" Color="#FF0991C3"/>
        </LinearGradientBrush>
        <!-- Style für die DataGridColumnHeader -->
        <Style x:Key="datagridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource datagridHeaderBackground}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,0,1,1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>

        <Style TargetType="ToolBar">
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="40"/>
        </Style>

        <ControlTemplate x:Key="rundButton" TargetType="Button">
            <Grid>
                <Ellipse x:Name="backgroundElement" Fill="WhiteSmoke" StrokeThickness="4" Stroke="Blue"/>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Stroke" TargetName="backgroundElement" Value="#FF39A8F5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="toggleButton" TargetType="ToggleButton">
            <Grid>
                <Ellipse x:Name="ellipse" Fill="WhiteSmoke" StrokeThickness="4" Stroke="Blue"/>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Stroke" TargetName="ellipse" Value="#FF39A8F5"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Fill" TargetName="ellipse" Value="LightBlue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="ContextMenu">
            <Setter Property="Background" Value="{StaticResource ContextmenuBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ContextmenuForegroundBrush}"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border x:Name="Border" Background="{StaticResource ContextmenuBackgroundBrush}" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property = "Background" Value="{DynamicResource ContextmenuBackgroundBrush}"/>
            <Setter Property = "Foreground" Value="{DynamicResource ContextmenuForegroundBrush}"/>
            <Style.Triggers>
                <Trigger Property="MenuItem.IsMouseOver" Value="true">
                    <!--<Setter Property = "FontSize" Value="16"/>-->
                    <Setter Property = "FontWeight" Value="Bold"/>
                    <Setter Property = "Foreground" Value="Blue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Style for Listbox with Palceholder-->
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                            RelativeSource={RelativeSource TemplatedParent}, 
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged}"
                                x:Name="textSource" 
                                Background="Transparent" 
                                Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <DataTemplate x:Key="buttonUnpressed">
            <Image Source="SpeakerOn.png"/>
        </DataTemplate>
        <DataTemplate x:Key="buttonPressed">
            <Image Source="SpeakerOff.png"/>
        </DataTemplate>

        <Style x:Key="simpleImageButton" TargetType="Button">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="ContentTemplate" Value="{StaticResource Unpressed}"/>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource Pressed}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
